"use strict";(self.webpackChunkjuice_docs=self.webpackChunkjuice_docs||[]).push([[8368],{5936:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"juice/user-guide/cli-app/advanced-cli/advanced-parameters","title":"Advanced Parameters","description":"Juice offers several advanced parameters to fine-tune your GPU sessions and application runs:","source":"@site/docs/juice/user-guide/cli-app/advanced-cli/advanced-parameters.md","sourceDirName":"juice/user-guide/cli-app/advanced-cli","slug":"/juice/user-guide/cli-app/advanced-cli/advanced-parameters","permalink":"/docs/juice/user-guide/cli-app/advanced-cli/advanced-parameters","draft":false,"unlisted":false,"editUrl":"https://github.com/juice-labs/juice-docs/edit/master/docs/juice/user-guide/cli-app/advanced-cli/advanced-parameters.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Advanced Parameters","sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Advanced CLI Processes","permalink":"/docs/juice/user-guide/cli-app/advanced-cli/"},"next":{"title":"Labels and Match Labels","permalink":"/docs/juice/user-guide/cli-app/advanced-cli/labels"}}');var r=s(4848),t=s(8453);const a={title:"Advanced Parameters",sidebar_position:2},l="Advanced Parameters",o={},c=[{value:"Run Command Options",id:"run-command-options",level:2},{value:"Global Command Options",id:"global-command-options",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"advanced-parameters",children:"Advanced Parameters"})}),"\n",(0,r.jsx)(n.p,{children:"Juice offers several advanced parameters to fine-tune your GPU sessions and application runs:"}),"\n",(0,r.jsx)(n.h2,{id:"run-command-options",children:"Run Command Options"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"--disable-cache"}),"\n",(0,r.jsx)(n.p,{children:"Prevents the system from using previously cached data for the current run. Use when you need to ensure fresh data for each run, e.g., when testing data-dependent applications or when data integrity is crucial."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-powershell",children:"juice run --disable-cache my_data_processing_app.py \n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"--disable-compression"}),"\n",(0,r.jsx)(n.p,{children:"Turns off data compression between the client and the GPU agent. Useful for applications sensitive to data integrity or when network bandwidth isn't a bottleneck. Can also help in diagnosing data transfer issues."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-powershell",children:"juice run --disable-compression my_high_fidelity_image_processing.py \n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"--ephemeral"}),"\n",(0,r.jsx)(n.p,{children:"Creates a new session for the run and immediately releases it after completion. Ideal for one-off tasks or when you need a clean state for each run, preventing any potential interference from previous sessions."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-powershell",children:"juice run --ephemeral my_benchmarking_script.py \n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"--match-labels <string>"}),"\n",(0,r.jsx)(n.p,{children:"Filters available GPUs based on specified labels, ensuring the task runs on a GPU with matching attributes. Use when you need to select GPUs with specific characteristics (e.g., GPU type, installed software)."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-powershell",children:'juice run --match-labels "gpu-type=v100,env=pytorch" my_ml_model.py \n'})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"--no-version-check"}),"\n",(0,r.jsx)(n.p,{children:"Bypasses the version compatibility check between the client and the GPU agent. Use cautiously when you need to run on potentially incompatible versions, typically in testing environments."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-powershell",children:"juice run --no-version-check my_experimental_app.py \n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"--on-connection-error <string>"}),"\n",(0,r.jsx)(n.p,{children:"Specifies the behavior when a connection error occurs. Options: [fail, continue] Use in scripts or automated workflows where you want to control how the system responds to connection issues."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-powershell",children:"juice run --on-connection-error continue my_resilient_app.py \n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"--on-queue-timeout <string>"}),"\n",(0,r.jsx)(n.p,{children:"Defines the action to take when the queue time exceeds the specified limit. Options: [fail, continue] Use in time-sensitive scenarios or when you need to control the behavior of long-waiting jobs."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-powershell",children:"juice run --on-queue-timeout continue --queue-timeout 300 my_long_running_job.py \n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"--pool-ids <string>"}),"\n",(0,r.jsx)(n.p,{children:"Restricts GPU selection to specific pools identified by their IDs. Use for resource management in multi-team setups or when you need to use GPUs from particular pools."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-powershell",children:"juice run --pool-ids pool1,pool2 my_app.py \n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"--queue-timeout <uint>"}),"\n",(0,r.jsx)(n.p,{children:"Sets the maximum time (in seconds) to wait for GPU availability. Use to prevent indefinite waits in resource-constrained environments or for time-sensitive applications."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-powershell",children:"juice run --queue-timeout 600 my_time_sensitive_app.py \n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"--tolerates <string>"}),"\n",(0,r.jsx)(n.p,{children:"Specifies which taints the session can tolerate, allowing use of GPUs with specific constraints. Use when you need to use GPUs that have been marked with certain restrictions or characteristics."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-powershell",children:'juice run --tolerates "high-priority=true" my_critical_task.py\n'})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"global-command-options",children:"Global Command Options"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"--log-file"}),"\n",(0,r.jsxs)(n.p,{children:["Directs CLI output to a specified file instead of standard output. Useful for debugging, creating audit trails, or when you need to review operation logs later.\n",(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-powershell",children:"juice --log-file=/path/to/juice.log run my_app.py\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"--log-level"}),"\n",(0,r.jsx)(n.p,{children:"Sets the verbosity level of logging. Options: debug, info, warn, error, fatal. Adjust for more detailed logs when troubleshooting or less verbose output in production."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-powershell",children:"juice --log-level debug run my_problematic_app.py \n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"--quiet"}),"\n",(0,r.jsx)(n.p,{children:"Suppresses most output from the CLI. Use in scripts or automated environments where you want to minimize output."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-powershell",children:"juice --quiet run my_background_task.py \n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"--no-banner"}),"\n",(0,r.jsx)(n.p,{children:"Removes the startup banner from the CLI output. Use in scripts or when you need cleaner output without the banner information."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-powershell",children:"juice --no-banner run my_app.py \n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"These advanced parameters provide fine-grained control over Juice's behavior, allowing users to optimize their workflows for specific use cases and environments."})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>l});var i=s(6540);const r={},t=i.createContext(r);function a(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);