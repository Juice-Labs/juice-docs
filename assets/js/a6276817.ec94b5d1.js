"use strict";(self.webpackChunkjuice_docs=self.webpackChunkjuice_docs||[]).push([[2885],{9811:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>o,contentTitle:()=>c,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"juice/user-guide/cli-app/gpu-slicing","title":"GPU Slicing","description":"Sometimes it can be useful to treat a single large GPU as a collection of","source":"@site/docs/juice/user-guide/cli-app/gpu-slicing.md","sourceDirName":"juice/user-guide/cli-app","slug":"/juice/user-guide/cli-app/gpu-slicing","permalink":"/docs/juice/user-guide/cli-app/gpu-slicing","draft":false,"unlisted":false,"editUrl":"https://github.com/juice-labs/juice-docs/edit/master/docs/juice/user-guide/cli-app/gpu-slicing.md","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"title":"GPU Slicing","sidebar_position":7},"sidebar":"tutorialSidebar","previous":{"title":"Sharing a GPU","permalink":"/docs/juice/user-guide/cli-app/gpu-sharing"},"next":{"title":"Advanced CLI Processes","permalink":"/docs/juice/user-guide/cli-app/advanced-cli/"}}');var r=n(4848),t=n(8453);const a={title:"GPU Slicing",sidebar_position:7},c="Slicing a GPU",o={},l=[{value:"Cutting a Slice",id:"cutting-a-slice",level:2},{value:"Ephemeral Slices",id:"ephemeral-slices",level:2}];function u(e){const i={admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.header,{children:(0,r.jsx)(i.h1,{id:"slicing-a-gpu",children:"Slicing a GPU"})}),"\n",(0,r.jsx)(i.p,{children:"Sometimes it can be useful to treat a single large GPU as a collection of\r\nsmaller GPUs. For example, if you have access to a single GPU with 80 GB of\r\nVRAM, but want to run multiple jobs that will only ever need a few gigabytes of\r\nmemory each. In order to accomplish this workload we can use Juice's GPU\r\nslicing functionality."}),"\n",(0,r.jsx)(i.admonition,{type:"note",children:(0,r.jsx)(i.p,{children:"GPU slicing is currently only supported for single-GPU compute workloads."})}),"\n",(0,r.jsx)(i.h2,{id:"cutting-a-slice",children:"Cutting a Slice"}),"\n",(0,r.jsxs)(i.p,{children:["Slicing a GPU starts by requesting a session on a GPU with a specific amount of VRAM with the ",(0,r.jsx)(i.code,{children:"--vram"})," option:"]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-powershell",children:"juice session request --vram 4\n"})}),"\n",(0,r.jsxs)(i.p,{children:["The above command will request a session with 4 GiB of VRAM from the available\r\nresources in your pool. ",(0,r.jsx)(i.code,{children:"--vram"})," expects a number as an argument representing\r\nthe amount of VRAM to reserve, expressed in GiBs. This number can be a decimal\r\nnumber and/or end with an appropriate suffix to allow more fine-grained\r\nrequests."]}),"\n",(0,r.jsx)(i.p,{children:"The following are all equivalent ways of asking for the same amount of VRAM:"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-powershell",children:"juice session request --vram 2.5\r\njuice session request --vram 2.5GiB\r\njuice session request --vram 2560MiB\r\njuice session request --vram 2684.35456MB\r\njuice session request --vram 2684354560B\n"})}),"\n",(0,r.jsxs)(i.p,{children:["By default ",(0,r.jsx)(i.code,{children:"--vram"})," can return a session that has been allocated fewer bytes\r\nthan requested if there is no GPU capable of fulfilling the request and the\r\nremaining amount is at least 93% of what was requested. This behavior is\r\nintended to make slicing of GPUs whose VRAM capacity is not a whole number of\r\nGiBs more ergonomic. This can be overridden with the inclusion of the\r\n",(0,r.jsx)(i.code,{children:"--vram-strict"})," flag which requires precisely the bytes requested to be\r\navailable."]}),"\n",(0,r.jsx)(i.h2,{id:"ephemeral-slices",children:"Ephemeral Slices"}),"\n",(0,r.jsxs)(i.p,{children:["The ",(0,r.jsx)(i.code,{children:"--vram"})," and ",(0,r.jsx)(i.code,{children:"--vram-strict"})," options are also accepted as options to ",(0,r.jsx)(i.code,{children:"juice run"}),". This is especially useful when combined with the ",(0,r.jsx)(i.code,{children:"--ephemeral"})," option to\r\nforce one-off sessions when launching multiple jobs that target the same GPU."]}),"\n",(0,r.jsx)(i.p,{children:"For example:"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-powershell",children:"juice run --ephemeral --vram 2 python script_1.py\r\njuice run --ephemeral --vram 2 python script_2.py\n"})})]})}function d(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>a,x:()=>c});var s=n(6540);const r={},t=s.createContext(r);function a(e){const i=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(t.Provider,{value:i},e.children)}}}]);