"use strict";(self.webpackChunkjuice_docs=self.webpackChunkjuice_docs||[]).push([[7980],{7916:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>t});const i=JSON.parse('{"id":"juice/pro-users/cli-app/reference/index","title":"CLI Reference","description":"This section documents all available CLI commands in the Juice CLI tool.","source":"@site/docs/juice/pro-users/cli-app/reference/index.md","sourceDirName":"juice/pro-users/cli-app/reference","slug":"/juice/pro-users/cli-app/reference/","permalink":"/juice-docs/docs/juice/pro-users/cli-app/reference/","draft":false,"unlisted":false,"editUrl":"https://github.com/juice-labs/juice-docs/edit/master/docs/juice/pro-users/cli-app/reference/index.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"CLI Reference","sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"CLI App Login","permalink":"/juice-docs/docs/juice/pro-users/cli-app/cli-login"},"next":{"title":"Running an Application on a Remote GPU","permalink":"/juice-docs/docs/juice/pro-users/cli-app/remote-gpu"}}');var l=n(4848),r=n(8453);const o={title:"CLI Reference",sidebar_position:2},d="CLI Reference",c={},t=[{value:"Core Commands",id:"core-commands",level:2},{value:"check",id:"check",level:3},{value:"login",id:"login",level:3},{value:"logout",id:"logout",level:3},{value:"Agent Management",id:"agent-management",level:2},{value:"agent list",id:"agent-list",level:3},{value:"agent info",id:"agent-info",level:3},{value:"agent run",id:"agent-run",level:3},{value:"agent service",id:"agent-service",level:3},{value:"agent service install",id:"agent-service-install",level:4},{value:"GPU Management",id:"gpu-management",level:2},{value:"gpu list",id:"gpu-list",level:3},{value:"Token Management",id:"token-management",level:2},{value:"m2m list",id:"m2m-list",level:3},{value:"m2m create",id:"m2m-create",level:3},{value:"m2m remove",id:"m2m-remove",level:3},{value:"Pool Management",id:"pool-management",level:2},{value:"pool list",id:"pool-list",level:3},{value:"Release Management",id:"release-management",level:2},{value:"release list",id:"release-list",level:3},{value:"release download",id:"release-download",level:3},{value:"Application Management",id:"application-management",level:2},{value:"run",id:"run",level:3},{value:"Session Management",id:"session-management",level:2},{value:"session list",id:"session-list",level:3},{value:"session release",id:"session-release",level:3},{value:"session request",id:"session-request",level:3},{value:"User Management",id:"user-management",level:2},{value:"user info",id:"user-info",level:3}];function a(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(s.header,{children:(0,l.jsx)(s.h1,{id:"cli-reference",children:"CLI Reference"})}),"\n",(0,l.jsx)(s.p,{children:"This section documents all available CLI commands in the Juice CLI tool."}),"\n",(0,l.jsx)(s.h2,{id:"core-commands",children:"Core Commands"}),"\n",(0,l.jsx)(s.h3,{id:"check",children:"check"}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Command"}),": ",(0,l.jsx)(s.code,{children:"check [options]"})]}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Description"}),": Checks the installation for common issues"]}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Parameters"}),":"]}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--json"}),": Format output as JSON"]}),"\n"]}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Details"}),":"]}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsx)(s.li,{children:"Checks installation in the default install directory"}),"\n",(0,l.jsx)(s.li,{children:"Verifies NVIDIA driver versions and compatibility"}),"\n",(0,l.jsx)(s.li,{children:"Reports any failures that would prevent GPU sharing"}),"\n"]}),"\n",(0,l.jsx)(s.h3,{id:"login",children:"login"}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Command"}),": ",(0,l.jsx)(s.code,{children:"login [controller]"})]}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Description"}),": Log in to a controller"]}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Parameters"}),":"]}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--insecure-skip-tls-verify, -k"}),": Skip verification of TLS certificates"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--token, -t"}),': Token to use for authentication (must be empty or start with "m2m")']}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"controller"})," (optional): The controller to connect to. Can be:","\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsx)(s.li,{children:"A predefined environment name"}),"\n",(0,l.jsx)(s.li,{children:"An HTTP/HTTPS URL"}),"\n",(0,l.jsx)(s.li,{children:"If omitted, uses the first environment from vendor configuration"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(s.h3,{id:"logout",children:"logout"}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Command"}),": ",(0,l.jsx)(s.code,{children:"logout"})]}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Description"}),": Log the current user out of the controller"]}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Note"}),": Cannot logout while having an active session - must release the session first using ",(0,l.jsx)(s.code,{children:"session release"})]}),"\n",(0,l.jsx)(s.h2,{id:"agent-management",children:"Agent Management"}),"\n",(0,l.jsx)(s.h3,{id:"agent-list",children:"agent list"}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Command"}),": ",(0,l.jsx)(s.code,{children:"agent list"})," (alias: ",(0,l.jsx)(s.code,{children:"agent ls"}),")"]}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Description"}),": List all the agents accessible to the user"]}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Parameters"}),":"]}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--json"}),": Output in JSON format"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--fields"}),": Specify fields to display (default fields: state, hostname, pool.name, id, numgpus)"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--sort"}),": Sort output (default sort column: 1)"]}),"\n"]}),"\n",(0,l.jsx)(s.h3,{id:"agent-info",children:"agent info"}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Command"}),": ",(0,l.jsx)(s.code,{children:"agent info <id>"})]}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Description"}),": Gets the information of a specific agent"]}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Parameters"}),":"]}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--json"}),": Output in JSON format"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--fields"}),": Specify fields to display (default fields: state, hostname, pool.name, id, numgpus)"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--sort"}),": Sort output (default sort column: 1)"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"id"})," (required): The ID of the agent to get information about"]}),"\n"]}),"\n",(0,l.jsx)(s.h3,{id:"agent-run",children:"agent run"}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Command"}),": ",(0,l.jsx)(s.code,{children:"agent run [pool_id]"})]}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Description"}),": Run the GPU Sharing agent in the foreground, sharing your GPU to a specified pool (not available in WSL)"]}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Parameters"}),":"]}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"pool_id"})," (required): ID of the pool to share GPUs with"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--exit-on-stdin"}),": Exit when stdin is closed"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--disable-gpu-metrics"}),": Disable GPU metrics collection"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--gpu-metrics-interval-ms"}),": GPU metrics collection interval in milliseconds"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--listen-ip"}),": IP address to listen on"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--cache-size"}),": Size of the cache"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--gpu-ids"}),": Comma-separated list of GPU UUIDs to share"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--labels"}),": Comma-separated list of key=value labels"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--taints"}),": Comma-separated list of key=value taints"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--stun-server"}),": Comma-separated list of STUN servers"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--relay-server"}),": Relay server address"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--force-relay"}),": Force using relay server"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--gateway-port"}),": Gateway port number (1-65535)"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--gateway-ips"}),": Comma-separated list of gateway IP addresses"]}),"\n"]}),"\n",(0,l.jsx)(s.h3,{id:"agent-service",children:"agent service"}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Command"}),": ",(0,l.jsx)(s.code,{children:"agent service"})]}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Description"}),": Manage the agent service (not available in WSL). These commands manage the agent service on Windows or Linux (via systemd)."]}),"\n",(0,l.jsx)(s.h4,{id:"agent-service-install",children:"agent service install"}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Command"}),": ",(0,l.jsx)(s.code,{children:"agent service install [pool-id]"})]}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Description"}),": Install the GPU Sharing agent as a service (not available in WSL)"]}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Parameters"}),":"]}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"pool-id"})," (required): ID of the pool to share GPUs with"]}),"\n",(0,l.jsxs)(s.li,{children:["All parameters from ",(0,l.jsx)(s.code,{children:"agent run"})," command are supported"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--cache-size"}),": Size of the cache"]}),"\n"]}),"\n",(0,l.jsx)(s.h2,{id:"gpu-management",children:"GPU Management"}),"\n",(0,l.jsx)(s.h3,{id:"gpu-list",children:"gpu list"}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Command"}),": ",(0,l.jsx)(s.code,{children:"gpu list"})," (alias: ",(0,l.jsx)(s.code,{children:"gpu ls"}),")"]}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Description"}),": List all the GPUs accessible to the user"]}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Parameters"}),":"]}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--json"}),": Output in JSON format"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--fields"}),": Specify fields to display (default fields: hostname, name, uuid, agentVersion, vram-h)"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--sort"}),": Sort output (default sort columns: 3,2,1)"]}),"\n"]}),"\n",(0,l.jsx)(s.h2,{id:"token-management",children:"Token Management"}),"\n",(0,l.jsx)(s.h3,{id:"m2m-list",children:"m2m list"}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Command"}),": ",(0,l.jsx)(s.code,{children:"m2m list [id]"})," (alias: ",(0,l.jsx)(s.code,{children:"m2m ls"}),")"]}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Description"}),": Lists all M2M tokens"]}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Parameters"}),":"]}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--json"}),": Output in JSON format"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--fields"}),": Specify fields to display (default fields: description, token, id, expiresAt)"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--sort"}),": Sort output (default sort column: 1)"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"id"})," (optional): ID of a specific token to list"]}),"\n"]}),"\n",(0,l.jsx)(s.h3,{id:"m2m-create",children:"m2m create"}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Command"}),": ",(0,l.jsx)(s.code,{children:"m2m create"})]}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Description"}),": Creates a Machine-2-Machine authentication token for use on servers. Once you have created a M2M token pass it as a flag to the login command to authenticate with your token instead of going through a web based authentication flow."]}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Parameters"}),":"]}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--description, -d"})," (required): Description for this token"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--expire-days, -e"}),": The number of days the token will be valid for (default: 30)"]}),"\n"]}),"\n",(0,l.jsx)(s.h3,{id:"m2m-remove",children:"m2m remove"}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Command"}),": ",(0,l.jsx)(s.code,{children:"m2m remove <id>"})]}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Description"}),": Removes a M2M token"]}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Parameters"}),":"]}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"id"})," (required): ID of the token to remove"]}),"\n"]}),"\n",(0,l.jsx)(s.h2,{id:"pool-management",children:"Pool Management"}),"\n",(0,l.jsx)(s.h3,{id:"pool-list",children:"pool list"}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Command"}),": ",(0,l.jsx)(s.code,{children:"pool list"})," (alias: ",(0,l.jsx)(s.code,{children:"pool ls"}),")"]}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Description"}),": List all the pools accessible to the user"]}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Parameters"}),":"]}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--json"}),": Output in JSON format"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--fields"}),": Specify fields to display (default fields: organization.name, name, id, sessions, gpuCount)"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--sort"}),": Sort output (default sort columns: 3,2,5,4,1)"]}),"\n"]}),"\n",(0,l.jsx)(s.h2,{id:"release-management",children:"Release Management"}),"\n",(0,l.jsx)(s.h3,{id:"release-list",children:"release list"}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Command"}),": ",(0,l.jsx)(s.code,{children:"release list"})," (alias: ",(0,l.jsx)(s.code,{children:"release ls"}),")"]}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Description"}),": List releases"]}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Parameters"}),":"]}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--json"}),": Output in JSON format"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--fields"}),": Specify fields to display (default fields: version, notes)"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--sort"}),": Sort output"]}),"\n"]}),"\n",(0,l.jsx)(s.h3,{id:"release-download",children:"release download"}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Command"}),": ",(0,l.jsx)(s.code,{children:"release download <version>"})," (alias: ",(0,l.jsx)(s.code,{children:"release dl"}),")"]}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Description"}),": Download a specific release"]}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Parameters"}),":"]}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"version"})," (required): Version of the release to download. If only a partial version is provided (without build info), it will match the first release that starts with that version."]}),"\n"]}),"\n",(0,l.jsx)(s.h2,{id:"application-management",children:"Application Management"}),"\n",(0,l.jsx)(s.h3,{id:"run",children:"run"}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Command"}),": ",(0,l.jsx)(s.code,{children:"run [flags] <application> [<application args>]"})]}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Description"}),": Starts an application using the GPU(s) available to the user"]}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Parameters"}),":"]}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"application"})," (required): The application to run"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--ephemeral"}),": Always requests a new session for the application"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--on-queue-timeout"}),": When a queue timeout happens, [fail, continue] (default: fail)"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--on-connection-error"}),": When a connection error happens, [fail, continue] (default: fail)"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--disable-compression"}),": Disables compression"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--disable-cache"}),": Disables caching"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--relaxed-api"}),": Enables a relaxed API conformance mode which allows for greater performance at expense of compatibility"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--listen-ip"}),": IPv4 address to bind to when listening for connections"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--disable-uvm-kernel-synchronization"}),": Disable synchronizing UVM memory before/after kernel launches"]}),"\n"]}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Note"}),": The following options are mutually exclusive: session, query, gpu-ids, pool-ids, match-labels, tolerates, num-gpus, ephemeral"]}),"\n",(0,l.jsx)(s.h2,{id:"session-management",children:"Session Management"}),"\n",(0,l.jsx)(s.h3,{id:"session-list",children:"session list"}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Command"}),": ",(0,l.jsx)(s.code,{children:"session list"})," (alias: ",(0,l.jsx)(s.code,{children:"session ls"}),")"]}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Description"}),": List all the user's sessions"]}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Parameters"}),":"]}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--all"}),": List all sessions (by default only shows active session)"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--json"}),": Output in JSON format"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--fields"}),": Specify fields to display (default fields: state, id, expiresAt, latencyMs, uploadMbps, downloadMbps)"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--sort"}),": Sort output (default sort column: 1)"]}),"\n"]}),"\n",(0,l.jsx)(s.h3,{id:"session-release",children:"session release"}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Command"}),": ",(0,l.jsx)(s.code,{children:"session release"})]}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Description"}),": Releases the active session"]}),"\n",(0,l.jsx)(s.h3,{id:"session-request",children:"session request"}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Command"}),": ",(0,l.jsx)(s.code,{children:"session request"})]}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Description"}),": Requests a new session"]}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Parameters"}),":"]}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--gpu-ids"}),": Comma separated list of GPU IDs to allocate"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--pool-ids"}),": Comma separated list of pool IDs from which to allocate the session resources"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--match-labels"}),": Comma separated list of key=value pairs"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--tolerates"}),": Comma separated list of key=value pairs"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--wait-for"}),": Maximum number of seconds to wait for a GPU (default: 0)"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--no-version-check"}),": Disables version checking when allocating the session requirements"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--num-gpus"}),": Number of GPUs required (default: 1)"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--session-timeout"}),": Time for the session to be automatically returned to the pool if not in use (default: -1)"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--watch-pid"}),": Watch the specified process and stop the session when it exits (default: -1)"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--dump-config"}),": Dumps the client configuration to the console in JSON format"]}),"\n"]}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Note"}),": The following options are mutually exclusive: gpu-ids, query"]}),"\n",(0,l.jsx)(s.h2,{id:"user-management",children:"User Management"}),"\n",(0,l.jsx)(s.h3,{id:"user-info",children:"user info"}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Command"}),": ",(0,l.jsx)(s.code,{children:"user info [id]"})]}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Description"}),": Retrieves user information"]}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Parameters"}),":"]}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--json"}),": Output in JSON format"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--fields"}),": Specify fields to display (default fields: name, email, id)"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"--sort"}),": Sort output (default sort column: 1)"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"id"})," (optional): ID of the user to get information about. If not provided, gets current user's information."]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,l.jsx)(s,{...e,children:(0,l.jsx)(a,{...e})}):a(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>d});var i=n(6540);const l={},r=i.createContext(l);function o(e){const s=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:o(e.components),i.createElement(r.Provider,{value:s},e.children)}}}]);