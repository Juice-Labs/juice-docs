"use strict";(self.webpackChunkjuice_docs=self.webpackChunkjuice_docs||[]).push([[7295],{1282:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"juice/user-guide/cli-app/m2m-tokens","title":"M2M Tokens","description":"In Juice, Machine-to-Machine (M2M) tokens provide a secure way to authenticate automated processes or long-running tasks without an interactive user login. These tokens are essential for scenarios where human intervention for authentication is impractical or impossible.","source":"@site/docs/juice/user-guide/cli-app/m2m-tokens.md","sourceDirName":"juice/user-guide/cli-app","slug":"/juice/user-guide/cli-app/m2m-tokens","permalink":"/juice-docs/docs/juice/user-guide/cli-app/m2m-tokens","draft":false,"unlisted":false,"editUrl":"https://github.com/juice-labs/juice-docs/edit/master/docs/juice/user-guide/cli-app/m2m-tokens.md","tags":[],"version":"current","sidebarPosition":8,"frontMatter":{"title":"M2M Tokens","sidebar_position":8},"sidebar":"tutorialSidebar","previous":{"title":"Combining Taints and Tolerates","permalink":"/juice-docs/docs/juice/user-guide/cli-app/advanced-cli/combining-taints-tolerates"},"next":{"title":"Cache","permalink":"/juice-docs/docs/juice/user-guide/cli-app/cache"}}');var t=s(4848),r=s(8453);const o={title:"M2M Tokens",sidebar_position:8},c="Machine-to-Machine Tokens",a={},l=[{value:"Key Features of M2M Tokens",id:"key-features-of-m2m-tokens",level:2},{value:"Creating and Managing M2M Tokens",id:"creating-and-managing-m2m-tokens",level:2},{value:"Using M2M Tokens",id:"using-m2m-tokens",level:2},{value:"Example Use Cases",id:"example-use-cases",level:2},{value:"Best Practices",id:"best-practices",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"machine-to-machine-tokens",children:"Machine-to-Machine Tokens"})}),"\n",(0,t.jsx)(n.p,{children:"In Juice, Machine-to-Machine (M2M) tokens provide a secure way to authenticate automated processes or long-running tasks without an interactive user login. These tokens are essential for scenarios where human intervention for authentication is impractical or impossible."}),"\n",(0,t.jsx)(n.h2,{id:"key-features-of-m2m-tokens",children:"Key Features of M2M Tokens"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Long-lived authentication mechanism"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Can be created, managed, and revoked independently of user accounts"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Ideal for automated scripts, CI/CD pipelines, and server-to-server communication"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Have a maximum life-time of 365 days"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"creating-and-managing-m2m-tokens",children:"Creating and Managing M2M Tokens"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"This command generates a new token and displays it. Save this token in a secure location once it\u2019s generated."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-powershell",children:"./juice m2m create -d '<token name>'\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"This command List existing M2M tokens:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-powershell",children:"./juice m2m list \n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Remove an M2M token:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-powershell",children:"./juice m2m remove '<token id*>' \n"})}),"\n",(0,t.jsxs)(n.p,{children:["* to retrieve token id ",(0,t.jsx)(n.code,{children:"run juice m2m list"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"By default a token will last 30 days, but by specifying the --expire-days parameter on creation you can extend this out to a maximum of 365 days."}),"\n",(0,t.jsx)(n.h2,{id:"using-m2m-tokens",children:"Using M2M Tokens"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"To authenticate using an M2M token"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-powershell",children:"./juice login -t '<token>'\n"})}),"\n",(0,t.jsx)(n.h2,{id:"example-use-cases",children:"Example Use Cases"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Automated Nightly Batch Jobs"}),": Set up a script to run intensive GPU computations during off-hours:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-powershell",children:"#!/bin/bash \n\n./juice login -t 'my_m2m_token_xyz' \n\n./juice run --pool-id nightly_pool my_nightly_job.py \n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"CI/CD Pipeline Integration"}),": In your CI/CD configuration (e.g., GitLab CI):"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-powershell",children:"gpu_test_job: \n\nscript: \n\n- ./juice login -t 'my_m2m_token_xyz'\n\n- ./juice run --gpu-ids '<the gpu id>' gpu_intensive_tests.py \n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Long-Running Server Applications"}),": For a server that needs persistent access to GPU resources:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-powershell",children:'import subprocess \n\ndef gpu_task(): \n\nsubprocess.run(["./juice", "login", "-t", "m2m_token_abc"]) \n\nsubprocess.run(["./juice", "run", "long_running_gpu_task.py"]) \n\n\n\n# Run this function periodically or as needed \n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Distributed Computing Setup"}),": In a distributed system where multiple nodes need GPU access:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-powershell",children:'def node_gpu_access(node_id): \n\ntoken = f"m2m_token_node_{node_id}" \n\nsubprocess.run(["./juice", "login", "-t", token]) \n\nsubprocess.run(["./juice", "run", f"node_{node_id}_task.py"]) \n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Automated Resource Management"}),": Script to check and release idle GPU sessions:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-powershell",children:"#!/bin/bash \n\n./juice login -t 'my_m2m_token_xyz' \n\nidle_sessions=$(./juice session list --all | grep \"idle\" | awk '{print $1}') \n\nfor session in $idle_sessions; do \n\n./juice session release $session \n\ndone\n"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Treat M2M tokens like passwords; store them securely"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Use a separate token for each distinct application or use case"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Regularly audit and rotate M2M tokens"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Limit the permissions associated with each token to the minimum necessary"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Implement monitoring and alerting for unusual token usage patterns"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Leveraging M2M tokens, you can securely automate GPU resource management and integrate Juice into various workflows and systems, enhancing productivity and resource utilization."})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>c});var i=s(6540);const t={},r=i.createContext(t);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);