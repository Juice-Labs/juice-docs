"use strict";(self.webpackChunkjuice_docs=self.webpackChunkjuice_docs||[]).push([[5268],{1334:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>c,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"juice/user-guide/multiple-gpus","title":"Multiple GPUs","description":"Juice supports multiple GPUs on a single host.","source":"@site/docs/juice/user-guide/multiple-gpus.md","sourceDirName":"juice/user-guide","slug":"/juice/user-guide/multiple-gpus","permalink":"/docs/juice/user-guide/multiple-gpus","draft":false,"unlisted":false,"editUrl":"https://github.com/juice-labs/juice-docs/edit/master/docs/juice/user-guide/multiple-gpus.md","tags":[],"version":"current","frontMatter":{"title":"Multiple GPUs","position":9},"sidebar":"tutorialSidebar","previous":{"title":"Agent in Docker","permalink":"/docs/juice/user-guide/docker/docker-agent"},"next":{"title":"Inviting Users","permalink":"/docs/juice/admin/inviting-users"}}');var t=n(4848),r=n(8453);const c={title:"Multiple GPUs",position:9},o="Multiple GPUs",l={},d=[];function a(e){const i={a:"a",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.header,{children:(0,t.jsx)(i.h1,{id:"multiple-gpus",children:"Multiple GPUs"})}),"\n",(0,t.jsx)(i.p,{children:"Juice supports multiple GPUs on a single host."}),"\n",(0,t.jsx)(i.p,{children:"For CUDA workloads all visible GPUs will be available automatically to the CUDA runtime. These can be used either multi-threaded, or assigned to a single process"}),"\n",(0,t.jsx)(i.p,{children:"To use a specific GPU for example in PyTorch this can be done by using the device context, for example"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-py",children:"with torch.cuda.device(<device>):\n  # some tensor stuff here\n"})}),"\n",(0,t.jsx)(i.h1,{id:"nccl",children:"NCCL"}),"\n",(0,t.jsx)(i.p,{children:"NCCL is supported currently on Linux, including in PyTorch and Tensorflow. Simply select the NCCL backend when running the specific CUDA workload. All available transports except multi-node connections are currently supported."}),"\n",(0,t.jsx)(i.h1,{id:"filtering",children:"Filtering"}),"\n",(0,t.jsx)(i.p,{children:"Juice supports a number of different ways to filter GPU devices on both the server and client."}),"\n",(0,t.jsx)(i.h1,{id:"server",children:"Server"}),"\n",(0,t.jsxs)(i.p,{children:["Running the Juice Server with ",(0,t.jsx)(i.code,{children:"CUDA_VISIBLE_DEVICES"})," environment variable set will filter available GPUs exposed to clients. A client will always get a subset of these devices. Re-ordering of devices can also be done to present a more powerful device as the default device, i.e ",(0,t.jsx)(i.code,{children:"CUDA_VISIBLE_DEVICES=1,0"}),", devices can also be referenced by their device UUID, see ",(0,t.jsx)(i.a,{href:"https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#env-vars",children:"https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#env-vars"})," for more information"]}),"\n",(0,t.jsx)(i.h1,{id:"client",children:"Client"}),"\n",(0,t.jsxs)(i.p,{children:["A client can select a subset of the available GPUs a server presents by again using the ",(0,t.jsx)(i.code,{children:"CUDA_VISIBLE_DEVICES"})," environment variable, these however must be device ordinals, for example ",(0,t.jsx)(i.code,{children:"0,1,2,3"}),". Re-ordering of devices is also supported. Note that devices will always be a subset of those those visible on the server."]}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.code,{children:"CUDA_VISIBLE_DEVICES=0,1 python <some pytorch script>"})}),"\n",(0,t.jsxs)(i.p,{children:["Forcing a client to use specific GPUs identified by their PCI bus ID is supported in the ",(0,t.jsx)(i.code,{children:"juice.cfg"}),", see ",(0,t.jsx)(i.a,{href:"https://github.com/Juice-Labs/Juice-Labs/wiki/Juice-Configuration#connection",children:"https://github.com/Juice-Labs/Juice-Labs/wiki/Juice-Configuration#connection"}),", for example:"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-json",children:'{\n  "pcibus": [\n    "2D:00.0",\n    "2E:00.0"   \n  ]\n}\n'})})]})}function u(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>c,x:()=>o});var s=n(6540);const t={},r=s.createContext(t);function c(e){const i=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),s.createElement(r.Provider,{value:i},e.children)}}}]);